Executing (default): SELECT 1+1 AS result
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'save_dev'
Executing (default): ALTER TABLE "Users" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "phone" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "Users"  ADD UNIQUE ("phone");ALTER TABLE "Users" ALTER COLUMN "phone" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "Users"  ADD UNIQUE ("email");ALTER TABLE "Users" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "is_verified" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "is_verified" SET DEFAULT false;ALTER TABLE "Users" ALTER COLUMN "is_verified" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "is_enabled" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "is_enabled" SET DEFAULT false;ALTER TABLE "Users" ALTER COLUMN "is_enabled" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "otp" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "otp" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "otp" TYPE INTEGER;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "deletedAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "deletedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "deletedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT "id", "name", "phone", "email", "password", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."email" = 'johndoe@example.com');
Executing (default): SELECT "id", "name", "phone", "email", "password", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."email" = 'johndoe@example.com');
Executing (default): SELECT "id", "name", "phone", "email", "password", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."phone" = '+1234567890');
Executing (default): INSERT INTO "Users" ("id","name","phone","email","password","is_verified","is_enabled","otp","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING "id","name","phone","email","password","is_verified","is_enabled","otp","createdAt","updatedAt","deletedAt";
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'save_dev'
Executing (default): ALTER TABLE "Users" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "phone" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "Users"  ADD UNIQUE ("phone");ALTER TABLE "Users" ALTER COLUMN "phone" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "public"."Users" DROP COLUMN "email";
Executing (default): ALTER TABLE "Users" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "is_verified" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "is_verified" SET DEFAULT false;ALTER TABLE "Users" ALTER COLUMN "is_verified" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "is_enabled" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "is_enabled" SET DEFAULT false;ALTER TABLE "Users" ALTER COLUMN "is_enabled" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "otp" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "otp" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "otp" TYPE INTEGER;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "deletedAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "deletedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "deletedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'save_dev'
Executing (default): ALTER TABLE "Users" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "phone" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "Users"  ADD UNIQUE ("phone");ALTER TABLE "Users" ALTER COLUMN "phone" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "is_verified" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "is_verified" SET DEFAULT false;ALTER TABLE "Users" ALTER COLUMN "is_verified" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "is_enabled" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "is_enabled" SET DEFAULT false;ALTER TABLE "Users" ALTER COLUMN "is_enabled" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "otp" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "otp" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "otp" TYPE INTEGER;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "deletedAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "deletedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "deletedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'save_dev'
Executing (default): ALTER TABLE "Users" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "phone" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "Users"  ADD UNIQUE ("phone");ALTER TABLE "Users" ALTER COLUMN "phone" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "is_verified" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "is_verified" SET DEFAULT false;ALTER TABLE "Users" ALTER COLUMN "is_verified" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "is_enabled" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "is_enabled" SET DEFAULT false;ALTER TABLE "Users" ALTER COLUMN "is_enabled" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "otp" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "otp" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "otp" TYPE INTEGER;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "deletedAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "deletedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "deletedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'save_dev'
Executing (default): ALTER TABLE "Users" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "phone" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "Users"  ADD UNIQUE ("phone");ALTER TABLE "Users" ALTER COLUMN "phone" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "is_verified" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "is_verified" SET DEFAULT false;ALTER TABLE "Users" ALTER COLUMN "is_verified" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "is_enabled" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "is_enabled" SET DEFAULT false;ALTER TABLE "Users" ALTER COLUMN "is_enabled" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "otp" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "otp" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "otp" TYPE INTEGER;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "deletedAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "deletedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "deletedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'save_dev'
Executing (default): ALTER TABLE "public"."Users" ADD COLUMN "pinCode" VARCHAR(255) NOT NULL;
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'save_dev'
Executing (default): ALTER TABLE "public"."Users" ADD COLUMN "pinCode" VARCHAR(255) NOT NULL;
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id" UUID , "name" VARCHAR(255), "phone" VARCHAR(255) NOT NULL UNIQUE, "pinCode" VARCHAR(255), "is_verified" BOOLEAN DEFAULT false, "is_enabled" BOOLEAN DEFAULT false, "otp" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE, "updatedAt" TIMESTAMP WITH TIME ZONE, "deletedAt" TIMESTAMP WITH TIME ZONE, PRIMARY KEY ("id"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT "id", "name", "phone", "pinCode", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."phone" = '03325466630');
Executing (default): INSERT INTO "Users" ("id","phone","is_verified","is_enabled","otp","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING "id","name","phone","pinCode","is_verified","is_enabled","otp","createdAt","updatedAt","deletedAt";
Executing (default): SELECT "id", "name", "phone", "pinCode", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."phone" = '03325466630');
Executing (default): SELECT "id", "name", "phone", "pinCode", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."phone" = '03325466630');
Executing (default): UPDATE "Users" SET "is_verified"=$1,"otp"=$2,"updatedAt"=$3 WHERE "id" = $4
Executing (default): SELECT "id", "name", "phone", "pinCode", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."phone" = '03325466630');
Executing (default): SELECT "id", "name", "phone", "pinCode", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."phone" = '03325466630');
Executing (default): UPDATE "Users" SET "name"=$1,"is_enabled"=$2,"updatedAt"=$3 WHERE "id" = $4
Executing (default): SELECT "id", "name", "phone", "pinCode", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."phone" = '03325466630');
Executing (default): INSERT INTO "Users" ("id","phone","is_verified","is_enabled","otp","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING "id","name","phone","pinCode","is_verified","is_enabled","otp","createdAt","updatedAt","deletedAt";
Executing (default): SELECT "id", "name", "phone", "pinCode", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."phone" = '03325466630');
Executing (default): UPDATE "Users" SET "is_verified"=$1,"otp"=$2,"updatedAt"=$3 WHERE "id" = $4
Executing (default): SELECT "id", "name", "phone", "pinCode", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."phone" = '03325466630');
Executing (default): UPDATE "Users" SET "name"=$1,"is_enabled"=$2,"updatedAt"=$3 WHERE "id" = $4
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'save_dev'
Executing (default): ALTER TABLE "Users" ALTER COLUMN "name" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "phone" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "Users"  ADD UNIQUE ("phone");ALTER TABLE "Users" ALTER COLUMN "phone" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "pinCode" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "pinCode" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "pinCode" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "is_verified" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "is_verified" SET DEFAULT false;ALTER TABLE "Users" ALTER COLUMN "is_verified" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "is_enabled" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "is_enabled" SET DEFAULT false;ALTER TABLE "Users" ALTER COLUMN "is_enabled" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "otp" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "otp" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "otp" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "deletedAt" DROP NOT NULL;ALTER TABLE "Users" ALTER COLUMN "deletedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "deletedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT "id", "name", "phone", "pinCode", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."phone" = '03325466630');
Executing (default): INSERT INTO "Users" ("id","phone","is_verified","is_enabled","otp","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING "id","name","phone","pinCode","is_verified","is_enabled","otp","createdAt","updatedAt","deletedAt";
Executing (default): SELECT "id", "name", "phone", "pinCode", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."phone" = '03325466630');
Executing (default): SELECT "id", "name", "phone", "pinCode", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."phone" = '03325466630');
Executing (default): UPDATE "Users" SET "is_verified"=$1,"otp"=$2,"updatedAt"=$3 WHERE "id" = $4
Executing (default): SELECT "id", "name", "phone", "pinCode", "is_verified", "is_enabled", "otp", "createdAt", "updatedAt", "deletedAt" FROM "Users" AS "User" WHERE ("User"."deletedAt" IS NULL AND "User"."phone" = '03325466630');
Executing (default): UPDATE "Users" SET "pinCode"=$1,"name"=$2,"is_enabled"=$3,"updatedAt"=$4 WHERE "id" = $5
